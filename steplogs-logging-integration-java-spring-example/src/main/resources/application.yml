server:
  port: 80
  http2.enabled: true
  shutdown: graceful
  forward-headers-strategy: native # might need it to take the trace/log id from http header if there is a proxy

spring:
  application:
    name: steplogs-logging-integration-java-spring-example

example:
  service:
    user.host: http://localhost/remote_api/

steplogs:
  logger:
    file-name: ./logs/${spring.application.name} # will be like  ./logs/steplogs-logging-integration-java-spring-example.20250415-161023-565.0.log
    file-max-length: 536870912
    print-stdout: true # print to console
    print-file: true # write to file
    log-date-time-format: yyyy-MM-dd HH:mm:ss.SSS # the time on the head of the log. Leave blank will print timestamp
    log-async: true # blocking IO or NIO write files
    log-light: false # full step info, or light. true: MedicController.java#io.steplogs.web.controller.MedicController#query#123; no thread info, type JSON->J, false: #.MedicController#query#123
    log-pretty: true # print pretty json and log, by new line and intends. close it in prd if needed.
    log-sanitizer-patterns: >
      /JSON/*Service*.java*.service.*UserService*#*/*/MASK(driverLisenceId)/*/MASK$2(name)//SKIP(birthday),
      /JSON/*Service*.java*.service.*MedicService*#*/*/MASK(driverLisenceId)/*/MASK$2(name)//SKIP(birthday),
      /JSON/*.java*.Medic*#*/*/MASK$4(deceases)/yyyy-MM-dd HH:mm:ss.ssss/DATE_FORMATER(timeCreated),
      /HTTP/LoggingHttpHeaderHandlerInterceptor.java#io.steplogs.logger.spring.LoggingHttpHeaderHandlerInterceptor#preHandle*/*/MASK(driverLisenceId)/*/MASK$2(name)//SKIP(birthday)

  app-node:
    http-header-id-type: 1 # for http headers give log/trace id to the clients
    application-name: ${spring.application.name}
    version: 1.2.3
    program: 1.2.2-1231321.jar
    host-id: node-123.test.test
    internal-ip: 12.2.2.2
    external-ip: 12.2.2.2

    github: # not functioning yet
      source-paths: > 
        src/main/java
      repository: RepoOwner/${spring.application.name}
      branch: main
      commit: xxxxxxx

  boot-info: # for info purpose, steplogs don't use it
    region: use-1
    platform: 
      cloud: aws

logging:
  file.name: log/${spring.application.name}.log
  file.attern: log/${spring.application.name}-%d{yyyy-MM-dd-HH-mm}-%i.log
  level: 
    root: DEBUG
    org.apache.coyote.http11: OFF
    jdk.event.security: OFF
    org.apache.http: OFF
    org.apache.hc: OFF

